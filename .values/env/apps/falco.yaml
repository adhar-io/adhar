apps:
    falco:
        enabled: false
        _rawValues:
            customRules:
                otomi-rules.yaml: "- macro: k8s_containers\n  condition: (\n      container.image.repository in (\n        docker.io/openpolicyagent/gatekeeper,\n        docker.io/velero/velero,\n        docker.io/weaveworks/kured,\n        k8s.gcr.io/kube-state-metrics/kube-state-metrics,\n        quay.io/jetstack/cert-manager-cainjector,\n        quay.io/jetstack/cert-manager-controller,\n        quay.io/jetstack/cert-manager-webhook,\n        quay.io/prometheus-operator/prometheus-operator,\n        quay.io/prometheus/prometheus,\n        quay.io/kiwigrid/k8s-sidecar,\n        docker.io/adhario/adhar,\n        docker.io/otomi/tasks,\n        docker.io/otomi/api,\n        docker.io/drone/drone-runner-kube,\n        docker.io/grafana/promtail,\n        gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard,\n        quay.io/argoprojlabs/argocd-image-updater\n      ) or (k8s.ns.name = \"kube-system\")\n        or (k8s.ns.name = \"ingress\")\n    )\n- macro: user_known_write_below_etc_activities\n  condition: (\n      (container.image.repository = docker.io/goharbor/harbor-core and proc.name = cp) or\n      (container.image.repository = docker.io/goharbor/harbor-registryctl and proc.name = cp) or\n      (container.image.repository = docker.io/goharbor/registry-photon and proc.name = cp) or\n      (container.image.repository = docker.io/goharbor/trivy-adapter-photon and proc.name = cp)\n    )\n- macro: user_sensitive_mount_containers\n  condition: (\n      container.image.repository in (\n        quay.io/prometheus/node-exporter\n      )\n    )\n- macro: user_trusted_containers\n  condition: (\n      container.image.repository in (\n        docker.io/drone/drone-runner-kube,\n        docker.io/otomi/api,\n        docker.io/otomi/tasks\n      )\n    )\n- macro: user_known_package_manager_in_container\n  condition: (\n      container.image.repository in (\n        docker.io/otomi/tasks\n      )\n    )\n- macro: user_known_k8s_client_container\n  condition: (\n      container.image.repository in (\n        docker.io/otomi/tasks,\n        ocker.io/adhario/adhar\n      ) or (k8s.ns.name = \"drone-pipelines\")\n    )\n- macro: user_known_non_sudo_setuid_conditions\n  condition: (\n      container.image.repository in (\n        docker.io/otomi/tasks,\n        docker.io/otomi/api,\n        docker.io/otomi/console,\n        docker.io/gitea/gitea,\n        docker.io/grafana/grafana\n      ) or (k8s.ns.name = \"ingress\")\n        or (k8s.ns.name = \"keycloak\")\n    )\n- macro: excessively_capable_container\n  condition: (\n      container.image.repository in (\n        docker.io/otomi/console,\n        docker.io/otomi/api\n      ) or (k8s.ns.name = \"keycloak\")\n    )\n- macro: user_known_write_below_root_activities\n  condition: (\n      k8s.ns.name = \"drone-pipelines\"\n    )\n- macro: user_known_network_tool_activities\n  condition: (\n      container.image.repository in (\n        docker.io/gitea/gitea\n      ) or (k8s.ns.name = \"keycloak\")  \n    )\n- macro: user_known_create_files_below_dev_activities\n  condition: (\n      container.image.repository in (\n        quay.io/operatorhubio/catalog\n      )\n    )"
