---
# Source: ingress-nginx/templates/default-backend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.6.1
    app.kubernetes.io/name: ingress-nginx-platform
    app.kubernetes.io/instance: ingress-nginx-platform
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/part-of: ingress-nginx-platform
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: default-backend
  name: ingress-nginx-platform-defaultbackend
  namespace: ingress
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-platform
      app.kubernetes.io/instance: ingress-nginx-platform
      app.kubernetes.io/component: default-backend
  replicas: 1
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx-platform
        app.kubernetes.io/instance: ingress-nginx-platform
        app.kubernetes.io/component: default-backend
    spec:
      priorityClassName: otomi-critical
      containers:
        - name: ingress-nginx-platform-default-backend
          image: "registry.k8s.io/defaultbackend-amd64:1.5"
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsUser: 65534
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources: 
            limits:
              cpu: 20m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 10Mi
      nodeSelector: 
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx-platform-backend
      terminationGracePeriodSeconds: 60
